// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedditScrapper.Context;

#nullable disable

namespace RedditScrapper.Context.Migrations
{
    [DbContext(typeof(RedditScrapperContext))]
    [Migration("20240103002542_user-table")]
    partial class usertable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RedditScrapper.Domain.Entities.Routine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MaxPostsPerSync")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NextRun")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostSorting")
                        .HasColumnType("int");

                    b.Property<string>("SubredditName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SyncRate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Routines");
                });

            modelBuilder.Entity("RedditScrapper.Domain.Entities.RoutineHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("RoutineId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Succeded")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RoutineId");

                    b.ToTable("RoutinesHistory");
                });

            modelBuilder.Entity("RedditScrapper.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RedditScrapper.Domain.Entities.RoutineHistory", b =>
                {
                    b.HasOne("RedditScrapper.Domain.Entities.Routine", "Routine")
                        .WithMany("RoutineHistory")
                        .HasForeignKey("RoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Routine");
                });

            modelBuilder.Entity("RedditScrapper.Domain.Entities.Routine", b =>
                {
                    b.Navigation("RoutineHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
